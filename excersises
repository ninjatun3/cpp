# модуль работы с файлами

import os # импорт модуля для удаления файлов и каталогов

# базовый класс работы с файлами
class File():

    # конструктор экземпляра класса
    def __init__(self, name, type):
        self.name = name
        self.type = type
        self.__filename = str(self.name + '.' + self.type)

    # метод открытия файла
    def open_file(self):
        print(f'trying file opening: {self.__filename}')
        # проверка существования файла
        try:
            with open(self.__filename) as file_object:
                contents = file_object.read()
                print(contents)
                print(f'{self.__filename} opened')
        except FileNotFoundError:
            print(f'{self.__filename} doesnt exist')

    # метод создания файла
    def create_file(self, new_file_name, new_file_type):
        self.new_file_name = new_file_name
        self.new_file_type = new_file_type
        self.__new_filename = str(self.new_file_name + '.' + self.new_file_type)
        with open(self.__filename, 'w+') as file_object:
            contents = file_object.read()
            print(contents)

    # метод для удаления файла
    # переписать с pathlib
    def delete_file(self):
        if os.path.isfile(self.__filename):
            os.remove(self.__filename)
            print(f'file {self.__filename} deleted  ')
        else:
            print(f'file {self.__filename} not exists')

file = File('name', 'txt')
file.open_file()
file.create_file('name', 'txt')
file.open_file()
file.delete_file()
